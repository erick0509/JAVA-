/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package desktop;

import java.net.InetAddress;
import java.net.UnknownHostException;
import java.sql.Connection;
import java.sql.DatabaseMetaData;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.time.LocalDate;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;

/**
 *
 * @author N&N
 */
public class selectDataBase extends javax.swing.JFrame {

    /**
     * Creates new form selectDataBase
     */
    public selectDataBase() throws UnknownHostException {
        initComponents();
        this.setLocationRelativeTo(null);
        listeDataBase();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        liste = new javax.swing.JList<>();
        jLabel1 = new javax.swing.JLabel();
        discard = new javax.swing.JButton();
        okDataBase = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        jPanel1.setBackground(new java.awt.Color(204, 204, 204));

        liste.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                listeValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(liste);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setText("Selectionner une base de donnees");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 270, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 162, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 217, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        discard.setText("annuler");
        discard.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                discardActionPerformed(evt);
            }
        });

        okDataBase.setText("ok");
        okDataBase.setEnabled(false);
        okDataBase.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                okDataBaseActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(discard, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(okDataBase, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(discard)
                    .addComponent(okDataBase))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void discardActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_discardActionPerformed
        this.dispose();
    }//GEN-LAST:event_discardActionPerformed

    private void okDataBaseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_okDataBaseActionPerformed
         String databaseName=liste.getSelectedValue();
        try {
            fenetre fe=new fenetre(databaseName);
            fe.setVisible(true);
            this.setVisible(false);
        } catch (UnknownHostException ex) {
            Logger.getLogger(selectDataBase.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(selectDataBase.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_okDataBaseActionPerformed

    private void listeValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_listeValueChanged

        okDataBase.setEnabled(true);
    }//GEN-LAST:event_listeValueChanged

    public void listeDataBase() throws UnknownHostException{
        InetAddress localHost = InetAddress.getLocalHost();
        String machineName = localHost.getHostName();   
        String connectionString = "jdbc:sqlserver://"+machineName+";integratedSecurity=true;encrypt=false;";
        Statement st;
        ResultSet rs;
        try {
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
        }catch(ClassNotFoundException e) {
            JOptionPane.showMessageDialog(null, "Erreur de pilotage jdbc!", "Avertissement", JOptionPane.WARNING_MESSAGE);
	}
        try {
            Connection connection = DriverManager.getConnection(connectionString);
            st=connection.createStatement();
            rs = st.executeQuery("SELECT name FROM sys.databases");
                DefaultListModel<String> databaseListModel = new DefaultListModel<>();
                while (rs.next()) {
                    String dbName = rs.getString("name");
                    boolean containsRequiredTables = checkRequiredTables(dbName);
                    if (containsRequiredTables) {
                        databaseListModel.addElement(dbName);
                    }
                }
                liste.setModel(databaseListModel);
           
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null,e, "Avertissement", JOptionPane.WARNING_MESSAGE);
        }
    }
    private boolean checkRequiredTables( String databaseName) throws SQLException, UnknownHostException{
        InetAddress localHost = InetAddress.getLocalHost();
        String machineName = localHost.getHostName();   
        String connectionString = "jdbc:sqlserver://"+machineName+";databaseName="+databaseName+";integratedSecurity=true;encrypt=false;";
        String query = "USE [" + databaseName + "]; " +
                   "IF (EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA = 'dbo' AND  " +
                   "(TABLE_NAME = 'F_ARTICLE' OR TABLE_NAME = 'F_DEPOT' OR TABLE_NAME = 'F_ARTSTOCK')))" +
                   "SELECT 1; " +
                   "ELSE SELECT 0;";
        Connection connection = DriverManager.getConnection(connectionString);
        Statement st=connection.createStatement();
        ResultSet rs = st.executeQuery(query);
        if (rs.next()) {
            return rs.getInt(1) == 1;
        }
        return false;
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(selectDataBase.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(selectDataBase.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(selectDataBase.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(selectDataBase.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        LocalDate currentDate = LocalDate.now();
        LocalDate specificDate = LocalDate.of(2023, 11, 15);
        
        if (currentDate.isAfter(specificDate)) {
            JOptionPane.showMessageDialog(null, "Acheter maintenant le logiciel!", "Avertissement", JOptionPane.WARNING_MESSAGE);
        } else { 
            java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new selectDataBase().setVisible(true);
                } catch (UnknownHostException ex) {
                    Logger.getLogger(selectDataBase.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton discard;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JList<String> liste;
    private javax.swing.JButton okDataBase;
    // End of variables declaration//GEN-END:variables
}
